name: 'Terraform Apply on push'
on:
  push:
    branches:
      - main
      - test_comments
#    paths:
#      - 'infrastructure/aws/**'
env:
  tf_version: '1.1.6'
  tf_working_dir: 'infrastructure/aws'
  tf_actions_working_dir: 'infrastructure/aws'
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#  TF_VAR_certificate-arn: ${{ secrets.CERTIFICATE_ARN }}
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.tf_version }}

      - name: 'Terraform format'
        id: fmt
        run: terraform fmt -check -diff
        continue-on-error: true

      - name: 'Terraform Init'
        id: init
        run: terraform init

      - name: 'Terraform Validate'
        id: validate
        run: terraform validate

      - name: 'Terraform Plan'
        id: plan
        run: terraform plan
        continue-on-error: true
      - name: 'Add comment'
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>
            
            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`
            
            </details>
            
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })